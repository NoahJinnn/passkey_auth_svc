// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "# ...\n## List of all custom errors\nFirst number is HTTP Status code, second is value of \"code\" field in returned JSON object, text description may or may not match \"message\" field in returned JSON object.\n",
    "title": "Hq Service",
    "version": "0.2.0"
  },
  "basePath": "/api",
  "paths": {
    "/accounts": {
      "get": {
        "operationId": "GetAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetAccountsResp"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/auth": {
      "get": {
        "operationId": "GetAuthAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetAuthAccountResp"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/balance": {
      "get": {
        "operationId": "GetBalance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetAccountsResp"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/create_link_token": {
      "post": {
        "operationId": "LinkTokenCreate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/LinkTokenCreateResp"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/health-check": {
      "get": {
        "description": "Returns 200 if service works okay.",
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "Extra details about service status, if any.",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/identity": {
      "get": {
        "operationId": "GetIdentity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetIdentityResp"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/info": {
      "post": {
        "operationId": "GetInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetInfoResp"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/sandbox_access_token/{institution_id}": {
      "get": {
        "operationId": "GetSandboxAccessToken",
        "parameters": [
          {
            "type": "string",
            "name": "institution_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetAccessTokenResp"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/set_access_token": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "operationId": "GetAccessToken",
        "parameters": [
          {
            "type": "string",
            "name": "public_token",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetAccessTokenResp"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "operationId": "GetTransactions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetTransactionsResp"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/user": {
      "post": {
        "operationId": "CreateUser",
        "parameters": [
          {
            "description": "Fields need to update a area",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create a user successfully.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      },
      "patch": {
        "operationId": "UpdateUser",
        "parameters": [
          {
            "description": "Fields need to update a area",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create a user successfully.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/user/{user_id}": {
      "get": {
        "operationId": "GetUserByID",
        "parameters": [
          {
            "type": "integer",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get user by id successfully.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/users": {
      "get": {
        "operationId": "GetUsers",
        "responses": {
          "200": {
            "description": "Get users successfully.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/webauthn/registration/finalize": {
      "post": {
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerTokenAuth": []
          }
        ],
        "description": "Finalize a registration with Webauthn using the WebAuthn API response to a ` + "`" + `navigator.credentials.create()` + "`" + ` call.\n",
        "tags": [
          "WebAuthn"
        ],
        "summary": "Finalize WebAuthn registration",
        "operationId": "webauthnRegFinal",
        "parameters": [
          {
            "description": "Fields need to update a area",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublicKeyCredentialAttestationResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful registration",
            "schema": {
              "type": "object",
              "properties": {
                "credential_id": {
                  "description": "The ID of the created credential",
                  "type": "string",
                  "format": "base64"
                },
                "user_id": {
                  "description": "The ID of the user on whose behalf a credential was created",
                  "allOf": [
                    {
                      "$ref": "#/definitions/UUID4"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/webauthn/registration/initialize": {
      "post": {
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerTokenAuth": []
          }
        ],
        "description": "Initialize a registration with Webauthn. Returns a JSON representation of CredentialCreationOptions for use\nwith the Webauthn API's ` + "`" + `navigator.credentials.create()` + "`" + `.\n",
        "tags": [
          "WebAuthn"
        ],
        "summary": "Initialize WebAuthn registration",
        "operationId": "webauthnRegInit",
        "responses": {
          "200": {
            "description": "Challenge",
            "schema": {
              "$ref": "#/definitions/CredentialCreationOptions"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccountBalance": {
      "type": "object",
      "title": "AccountBalance",
      "required": [
        "available",
        "current",
        "limit",
        "iso_currency_code",
        "unofficial_currency_code",
        "last_updated_datetime"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "available": {
          "$ref": "#/definitions/NullableFloat64"
        },
        "current": {
          "$ref": "#/definitions/NullableFloat64"
        },
        "iso_currency_code": {
          "$ref": "#/definitions/NullableString"
        },
        "last_updated_datetime": {
          "$ref": "#/definitions/NullableTime"
        },
        "limit": {
          "$ref": "#/definitions/NullableFloat64"
        },
        "unofficial_currency_code": {
          "$ref": "#/definitions/NullableString"
        }
      }
    },
    "AccountBase": {
      "type": "object",
      "title": "AccountBase",
      "required": [
        "account_id",
        "balances",
        "mask",
        "name",
        "official_name",
        "type",
        "subtype",
        "verification_status"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "account_id": {
          "type": "string"
        },
        "balances": {
          "$ref": "#/definitions/AccountBalance"
        },
        "mask": {
          "$ref": "#/definitions/NullableString"
        },
        "name": {
          "type": "string"
        },
        "official_name": {
          "$ref": "#/definitions/NullableString"
        },
        "subtype": {
          "$ref": "#/definitions/NullableAccountSubtype"
        },
        "type": {
          "type": "string"
        },
        "verification_status": {
          "type": "string"
        }
      }
    },
    "AccountIdentity": {
      "type": "object",
      "title": "AccountIdentity",
      "required": [
        "account_id",
        "balances",
        "mask",
        "name",
        "official_name",
        "type",
        "subtype",
        "verification_status",
        "owners"
      ],
      "properties": {
        "account_id": {
          "type": "string"
        },
        "balances": {
          "$ref": "#/definitions/AccountBalance"
        },
        "mask": {
          "$ref": "#/definitions/NullableString"
        },
        "name": {
          "type": "string"
        },
        "official_name": {
          "$ref": "#/definitions/NullableString"
        },
        "owners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Owner"
          }
        },
        "subtype": {
          "$ref": "#/definitions/NullableAccountSubtype"
        },
        "type": {
          "type": "string"
        },
        "verification_status": {
          "type": "string"
        }
      }
    },
    "AdditionalProperties": {
      "type": "object",
      "title": "AdditionalProperties",
      "properties": {
        "": {
          "$ref": "#/definitions/mapstringinterface"
        }
      }
    },
    "Address": {
      "type": "object",
      "title": "Address",
      "required": [
        "data",
        "primary"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "data": {
          "$ref": "#/definitions/AddressData"
        },
        "primary": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "AddressData": {
      "type": "object",
      "title": "AddressData",
      "required": [
        "city",
        "region",
        "street",
        "postal_code",
        "country"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/NullableString"
        },
        "postal_code": {
          "$ref": "#/definitions/NullableString"
        },
        "region": {
          "$ref": "#/definitions/NullableString"
        },
        "street": {
          "type": "string"
        }
      }
    },
    "AuthGetNumbers": {
      "type": "object",
      "title": "AuthGetNumbers",
      "required": [
        "ach",
        "eft",
        "international",
        "bacs"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "ach": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumbersACH"
          }
        },
        "bacs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumbersBACS"
          }
        },
        "eft": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumbersEFT"
          }
        },
        "international": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumbersInternational"
          }
        }
      }
    },
    "CredentialCreationOptions": {
      "description": "Options for credential creation with the WebAuthn API",
      "type": "object",
      "properties": {
        "publicKey": {
          "type": "object",
          "properties": {
            "attestation": {
              "type": "string",
              "enum": [
                "none",
                "indirect",
                "direct",
                "enterprise"
              ],
              "example": "none"
            },
            "authenticatorSelection": {
              "type": "object",
              "properties": {
                "authenticatorAttachment": {
                  "type": "string",
                  "enum": [
                    "platform",
                    "cross-platform"
                  ],
                  "example": "platform"
                },
                "requireResidentKey": {
                  "type": "boolean",
                  "example": true
                },
                "residentKey": {
                  "type": "string",
                  "enum": [
                    "discouraged",
                    "preferred",
                    "required"
                  ],
                  "example": "preferred"
                },
                "userVerification": {
                  "type": "string",
                  "enum": [
                    "discouraged",
                    "preferred",
                    "required"
                  ],
                  "example": "required"
                }
              }
            },
            "challenge": {
              "type": "string",
              "format": "base64url",
              "example": "7qmkJUXR0dOFnsW48evX3qKdCzlGjvvqAAvMDN+KTN0="
            },
            "pubKeyCredParams": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "alg": {
                    "type": "number"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "public-key"
                    ]
                  }
                }
              },
              "example": [
                {
                  "alg": -7,
                  "type": "public-key"
                }
              ]
            },
            "rp": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "localhost"
                },
                "name": {
                  "type": "string",
                  "example": "Hanko Authentication Service"
                }
              }
            },
            "timeout": {
              "type": "number",
              "format": "int64",
              "example": 60000
            },
            "user": {
              "type": "object",
              "properties": {
                "displayName": {
                  "type": "string",
                  "example": "user@example.com"
                },
                "id": {
                  "type": "string",
                  "example": "pPQT9rwJRD7gVncsnCDNyN"
                },
                "name": {
                  "type": "string",
                  "example": "user@example.com"
                }
              }
            }
          }
        }
      },
      "externalDocs": {
        "url": "https://www.w3.org/TR/webauthn-2/#dictionary-makecredentialoptions"
      }
    },
    "CredentialRequestOptions": {
      "description": "Options for assertion generation with the WebAuthn API",
      "type": "object",
      "properties": {
        "publicKey": {
          "type": "object",
          "properties": {
            "allowCredentials": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "base64url",
                    "example": "Mepptysj5ZZrTlg0qiLbsZ068OtQMeGVAikVy2n1hvvG..."
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "public-key"
                    ],
                    "example": "public-key"
                  }
                }
              }
            },
            "challenge": {
              "type": "string",
              "format": "base64url",
              "example": "qgOI+0KpGnl9NOqaT6dfsYvi96R87LgpErnvePeOgSU="
            },
            "rpId": {
              "type": "string",
              "example": "localhost"
            },
            "timeout": {
              "type": "number",
              "format": "int64",
              "example": 60000
            },
            "userVerification": {
              "type": "string",
              "enum": [
                "required",
                "preferred",
                "discouraged"
              ],
              "example": "required"
            }
          }
        }
      },
      "externalDocs": {
        "url": "https://www.w3.org/TR/webauthn-2/#dictionary-assertion-options"
      }
    },
    "Email": {
      "type": "object",
      "title": "Email",
      "required": [
        "data",
        "primary",
        "type"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "data": {
          "type": "string"
        },
        "primary": {
          "type": "boolean",
          "format": "boolean"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "Either same as HTTP Status Code OR \u003e= 600 with HTTP Status Code 422.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "GetAccessTokenResp": {
      "type": "object",
      "title": "GetAccessTokenResp",
      "required": [
        "access_token",
        "item_id"
      ],
      "properties": {
        "access_token": {
          "type": "string"
        },
        "item_id": {
          "type": "string"
        }
      }
    },
    "GetAccountsResp": {
      "type": "object",
      "title": "GetAccountsResp",
      "required": [
        "accounts"
      ],
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountBase"
          }
        }
      }
    },
    "GetAuthAccountResp": {
      "type": "object",
      "title": "GetAuthAccountResp",
      "required": [
        "accounts",
        "numbers"
      ],
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountBase"
          }
        },
        "numbers": {
          "$ref": "#/definitions/AuthGetNumbers"
        }
      }
    },
    "GetIdentityResp": {
      "type": "object",
      "title": "GetIdentityResp",
      "required": [
        "identity"
      ],
      "properties": {
        "identity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountIdentity"
          }
        }
      }
    },
    "GetInfoResp": {
      "type": "object",
      "title": "GetInfoResp",
      "required": [
        "access_token",
        "item_id",
        "products"
      ],
      "properties": {
        "access_token": {
          "type": "string"
        },
        "item_id": {
          "type": "string"
        },
        "products": {
          "type": "string"
        }
      }
    },
    "GetTransactionsResp": {
      "type": "object",
      "title": "GetTransactionsResp",
      "required": [
        "latest_transactions"
      ],
      "properties": {
        "latest_transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transaction"
          }
        }
      }
    },
    "LinkTokenCreateResp": {
      "type": "object",
      "title": "LinkTokenCreateResp",
      "required": [
        "link_token"
      ],
      "properties": {
        "link_token": {
          "type": "string"
        }
      }
    },
    "Location": {
      "type": "object",
      "title": "Location",
      "required": [
        "address",
        "city",
        "region",
        "postal_code",
        "country",
        "lat",
        "lon",
        "store_number"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "address": {
          "$ref": "#/definitions/NullableString"
        },
        "city": {
          "$ref": "#/definitions/NullableString"
        },
        "country": {
          "$ref": "#/definitions/NullableString"
        },
        "lat": {
          "$ref": "#/definitions/NullableFloat64"
        },
        "lon": {
          "$ref": "#/definitions/NullableFloat64"
        },
        "postal_code": {
          "$ref": "#/definitions/NullableString"
        },
        "region": {
          "$ref": "#/definitions/NullableString"
        },
        "store_number": {
          "$ref": "#/definitions/NullableString"
        }
      }
    },
    "NullableAccountSubtype": {
      "type": "object",
      "title": "NullableAccountSubtype",
      "required": [
        "value",
        "isSet"
      ],
      "properties": {
        "isSet": {
          "type": "boolean",
          "format": "boolean"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "NullableFloat64": {
      "type": "object",
      "title": "NullableFloat64",
      "required": [
        "value",
        "isSet"
      ],
      "properties": {
        "isSet": {
          "type": "boolean",
          "format": "boolean"
        },
        "value": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "NullablePersonalFinanceCategory": {
      "type": "object",
      "title": "NullablePersonalFinanceCategory",
      "required": [
        "value",
        "isSet"
      ],
      "properties": {
        "isSet": {
          "type": "boolean",
          "format": "boolean"
        },
        "value": {
          "$ref": "#/definitions/PersonalFinanceCategory"
        }
      }
    },
    "NullableString": {
      "type": "object",
      "title": "NullableString",
      "required": [
        "value",
        "isSet"
      ],
      "properties": {
        "isSet": {
          "type": "boolean",
          "format": "boolean"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "NullableTime": {
      "type": "object",
      "title": "NullableTime",
      "required": [
        "value",
        "isSet"
      ],
      "properties": {
        "isSet": {
          "type": "boolean",
          "format": "boolean"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "NullableTransactionCode": {
      "type": "object",
      "title": "NullableTransactionCode",
      "required": [
        "value",
        "isSet"
      ],
      "properties": {
        "isSet": {
          "type": "boolean",
          "format": "boolean"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "NumbersACH": {
      "type": "object",
      "title": "NumbersACH",
      "required": [
        "account_id",
        "account",
        "routing",
        "wire_routing"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "account": {
          "type": "string"
        },
        "account_id": {
          "type": "string"
        },
        "routing": {
          "type": "string"
        },
        "wire_routing": {
          "$ref": "#/definitions/NullableString"
        }
      }
    },
    "NumbersBACS": {
      "type": "object",
      "title": "NumbersBACS",
      "required": [
        "account_id",
        "account",
        "sort_code"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "account": {
          "type": "string"
        },
        "account_id": {
          "type": "string"
        },
        "sort_code": {
          "type": "string"
        }
      }
    },
    "NumbersEFT": {
      "type": "object",
      "title": "NumbersEFT",
      "required": [
        "account_id",
        "account",
        "institution",
        "branch"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "account": {
          "type": "string"
        },
        "account_id": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "institution": {
          "type": "string"
        }
      }
    },
    "NumbersInternational": {
      "type": "object",
      "title": "NumbersInternational",
      "required": [
        "account_id",
        "iban",
        "bic"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "account_id": {
          "type": "string"
        },
        "bic": {
          "type": "string"
        },
        "iban": {
          "type": "string"
        }
      }
    },
    "Owner": {
      "type": "object",
      "title": "Owner",
      "required": [
        "names",
        "phone_numbers",
        "emails",
        "addresses"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "emails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Email"
          }
        },
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "phone_numbers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhoneNumber"
          }
        }
      }
    },
    "PaymentMeta": {
      "type": "object",
      "title": "PaymentMeta",
      "required": [
        "reference_number",
        "ppd_id",
        "payee",
        "by_order_of",
        "payer",
        "payment_method",
        "payment_processor",
        "reason"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "by_order_of": {
          "$ref": "#/definitions/NullableString"
        },
        "payee": {
          "$ref": "#/definitions/NullableString"
        },
        "payer": {
          "$ref": "#/definitions/NullableString"
        },
        "payment_method": {
          "$ref": "#/definitions/NullableString"
        },
        "payment_processor": {
          "$ref": "#/definitions/NullableString"
        },
        "ppd_id": {
          "$ref": "#/definitions/NullableString"
        },
        "reason": {
          "$ref": "#/definitions/NullableString"
        },
        "reference_number": {
          "$ref": "#/definitions/NullableString"
        }
      }
    },
    "PersonalFinanceCategory": {
      "type": "object",
      "title": "PersonalFinanceCategory",
      "required": [
        "primary",
        "detailed"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "detailed": {
          "type": "string"
        },
        "primary": {
          "type": "string"
        }
      }
    },
    "PhoneNumber": {
      "type": "object",
      "title": "PhoneNumber",
      "required": [
        "data",
        "primary",
        "type"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "data": {
          "type": "string"
        },
        "primary": {
          "type": "boolean",
          "format": "boolean"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "PublicKeyCredentialAttestationResponse": {
      "description": "WebAuthn API response to a navigator.credentials.create() call",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "_18q6IjW09tiM4NSbsZjocUtGx00Muv5mN6LZCelCMDD..."
        },
        "rawId": {
          "type": "string",
          "example": "_18q6IjW09tiM4NSbsZjocUtGx00Muv5mN6LZCelCMDD..."
        },
        "response": {
          "type": "object",
          "properties": {
            "attestationObject": {
              "type": "string",
              "format": "base64url",
              "example": "o2NmbXRkbm9uZWdhdHRTdG10oGhhdXRoRGF0YVjfSZYN..."
            },
            "clientDataJson": {
              "type": "string",
              "format": "base64url",
              "example": "eyJ0eXBlIjoid2ViYXV0aG4uZ2V0IiwiY2hhbGxlbmdl..."
            },
            "transports": {
              "type": "string",
              "enum": [
                "usb",
                "nfc",
                "ble",
                "internal"
              ],
              "example": "internal"
            }
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "public-key"
          ],
          "example": "public-key"
        }
      }
    },
    "Transaction": {
      "type": "object",
      "title": "Transaction",
      "required": [
        "transaction_type",
        "pending_transaction_id",
        "category_id",
        "category",
        "location",
        "payment_meta",
        "account_owner",
        "name",
        "original_description",
        "account_id",
        "amount",
        "iso_currency_code",
        "unofficial_currency_code",
        "date",
        "pending",
        "transaction_id",
        "merchant_name",
        "check_number",
        "payment_channel",
        "authorized_date",
        "authorized_datetime",
        "datetime",
        "transaction_code",
        "personal_finance_category"
      ],
      "properties": {
        "account_id": {
          "type": "string"
        },
        "account_owner": {
          "$ref": "#/definitions/NullableString"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "authorized_date": {
          "$ref": "#/definitions/NullableString"
        },
        "authorized_datetime": {
          "$ref": "#/definitions/NullableTime"
        },
        "category": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "category_id": {
          "$ref": "#/definitions/NullableString"
        },
        "check_number": {
          "$ref": "#/definitions/NullableString"
        },
        "date": {
          "type": "string"
        },
        "datetime": {
          "$ref": "#/definitions/NullableTime"
        },
        "iso_currency_code": {
          "$ref": "#/definitions/NullableString"
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "merchant_name": {
          "$ref": "#/definitions/NullableString"
        },
        "name": {
          "type": "string"
        },
        "original_description": {
          "$ref": "#/definitions/NullableString"
        },
        "payment_channel": {
          "type": "string"
        },
        "payment_meta": {
          "$ref": "#/definitions/PaymentMeta"
        },
        "pending": {
          "type": "boolean",
          "format": "boolean"
        },
        "pending_transaction_id": {
          "$ref": "#/definitions/NullableString"
        },
        "personal_finance_category": {
          "$ref": "#/definitions/NullablePersonalFinanceCategory"
        },
        "transaction_code": {
          "$ref": "#/definitions/NullableTransactionCode"
        },
        "transaction_id": {
          "type": "string"
        },
        "transaction_type": {
          "type": "string"
        },
        "unofficial_currency_code": {
          "$ref": "#/definitions/NullableString"
        }
      }
    },
    "UUID4": {
      "type": "string",
      "format": "uuid4",
      "example": "c339547d-e17d-4ba7-8a1d-b3d5a4d17c1c"
    },
    "User": {
      "type": "object",
      "title": "User",
      "required": [
        "ID",
        "FirstName",
        "LastName",
        "Email"
      ],
      "properties": {
        "Address": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "LastName": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "PhoneNumber": {
          "type": "string"
        }
      }
    },
    "mapstringinterface": {
      "type": "object",
      "title": "mapstringinterface"
    }
  },
  "responses": {
    "GenericError": {
      "description": "General errors using same model as used by go-swagger for validation errors.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "# ...\n## List of all custom errors\nFirst number is HTTP Status code, second is value of \"code\" field in returned JSON object, text description may or may not match \"message\" field in returned JSON object.\n",
    "title": "Hq Service",
    "version": "0.2.0"
  },
  "basePath": "/api",
  "paths": {
    "/accounts": {
      "get": {
        "operationId": "GetAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetAccountsResp"
            }
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth": {
      "get": {
        "operationId": "GetAuthAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetAuthAccountResp"
            }
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/balance": {
      "get": {
        "operationId": "GetBalance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetAccountsResp"
            }
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/create_link_token": {
      "post": {
        "operationId": "LinkTokenCreate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/LinkTokenCreateResp"
            }
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/health-check": {
      "get": {
        "description": "Returns 200 if service works okay.",
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "Extra details about service status, if any.",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/identity": {
      "get": {
        "operationId": "GetIdentity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetIdentityResp"
            }
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/info": {
      "post": {
        "operationId": "GetInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetInfoResp"
            }
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/sandbox_access_token/{institution_id}": {
      "get": {
        "operationId": "GetSandboxAccessToken",
        "parameters": [
          {
            "type": "string",
            "name": "institution_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetAccessTokenResp"
            }
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/set_access_token": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "operationId": "GetAccessToken",
        "parameters": [
          {
            "type": "string",
            "name": "public_token",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetAccessTokenResp"
            }
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "operationId": "GetTransactions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetTransactionsResp"
            }
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user": {
      "post": {
        "operationId": "CreateUser",
        "parameters": [
          {
            "description": "Fields need to update a area",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create a user successfully.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "UpdateUser",
        "parameters": [
          {
            "description": "Fields need to update a area",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create a user successfully.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/{user_id}": {
      "get": {
        "operationId": "GetUserByID",
        "parameters": [
          {
            "type": "integer",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get user by id successfully.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "operationId": "GetUsers",
        "responses": {
          "200": {
            "description": "Get users successfully.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/webauthn/registration/finalize": {
      "post": {
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerTokenAuth": []
          }
        ],
        "description": "Finalize a registration with Webauthn using the WebAuthn API response to a ` + "`" + `navigator.credentials.create()` + "`" + ` call.\n",
        "tags": [
          "WebAuthn"
        ],
        "summary": "Finalize WebAuthn registration",
        "operationId": "webauthnRegFinal",
        "parameters": [
          {
            "description": "Fields need to update a area",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublicKeyCredentialAttestationResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful registration",
            "schema": {
              "type": "object",
              "properties": {
                "credential_id": {
                  "description": "The ID of the created credential",
                  "type": "string",
                  "format": "base64"
                },
                "user_id": {
                  "description": "The ID of the user on whose behalf a credential was created",
                  "allOf": [
                    {
                      "$ref": "#/definitions/UUID4"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/webauthn/registration/initialize": {
      "post": {
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerTokenAuth": []
          }
        ],
        "description": "Initialize a registration with Webauthn. Returns a JSON representation of CredentialCreationOptions for use\nwith the Webauthn API's ` + "`" + `navigator.credentials.create()` + "`" + `.\n",
        "tags": [
          "WebAuthn"
        ],
        "summary": "Initialize WebAuthn registration",
        "operationId": "webauthnRegInit",
        "responses": {
          "200": {
            "description": "Challenge",
            "schema": {
              "$ref": "#/definitions/CredentialCreationOptions"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccountBalance": {
      "type": "object",
      "title": "AccountBalance",
      "required": [
        "available",
        "current",
        "limit",
        "iso_currency_code",
        "unofficial_currency_code",
        "last_updated_datetime"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "available": {
          "$ref": "#/definitions/NullableFloat64"
        },
        "current": {
          "$ref": "#/definitions/NullableFloat64"
        },
        "iso_currency_code": {
          "$ref": "#/definitions/NullableString"
        },
        "last_updated_datetime": {
          "$ref": "#/definitions/NullableTime"
        },
        "limit": {
          "$ref": "#/definitions/NullableFloat64"
        },
        "unofficial_currency_code": {
          "$ref": "#/definitions/NullableString"
        }
      }
    },
    "AccountBase": {
      "type": "object",
      "title": "AccountBase",
      "required": [
        "account_id",
        "balances",
        "mask",
        "name",
        "official_name",
        "type",
        "subtype",
        "verification_status"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "account_id": {
          "type": "string"
        },
        "balances": {
          "$ref": "#/definitions/AccountBalance"
        },
        "mask": {
          "$ref": "#/definitions/NullableString"
        },
        "name": {
          "type": "string"
        },
        "official_name": {
          "$ref": "#/definitions/NullableString"
        },
        "subtype": {
          "$ref": "#/definitions/NullableAccountSubtype"
        },
        "type": {
          "type": "string"
        },
        "verification_status": {
          "type": "string"
        }
      }
    },
    "AccountIdentity": {
      "type": "object",
      "title": "AccountIdentity",
      "required": [
        "account_id",
        "balances",
        "mask",
        "name",
        "official_name",
        "type",
        "subtype",
        "verification_status",
        "owners"
      ],
      "properties": {
        "account_id": {
          "type": "string"
        },
        "balances": {
          "$ref": "#/definitions/AccountBalance"
        },
        "mask": {
          "$ref": "#/definitions/NullableString"
        },
        "name": {
          "type": "string"
        },
        "official_name": {
          "$ref": "#/definitions/NullableString"
        },
        "owners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Owner"
          }
        },
        "subtype": {
          "$ref": "#/definitions/NullableAccountSubtype"
        },
        "type": {
          "type": "string"
        },
        "verification_status": {
          "type": "string"
        }
      }
    },
    "AdditionalProperties": {
      "type": "object",
      "title": "AdditionalProperties",
      "properties": {
        "": {
          "$ref": "#/definitions/mapstringinterface"
        }
      }
    },
    "Address": {
      "type": "object",
      "title": "Address",
      "required": [
        "data",
        "primary"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "data": {
          "$ref": "#/definitions/AddressData"
        },
        "primary": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "AddressData": {
      "type": "object",
      "title": "AddressData",
      "required": [
        "city",
        "region",
        "street",
        "postal_code",
        "country"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/NullableString"
        },
        "postal_code": {
          "$ref": "#/definitions/NullableString"
        },
        "region": {
          "$ref": "#/definitions/NullableString"
        },
        "street": {
          "type": "string"
        }
      }
    },
    "AuthGetNumbers": {
      "type": "object",
      "title": "AuthGetNumbers",
      "required": [
        "ach",
        "eft",
        "international",
        "bacs"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "ach": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumbersACH"
          }
        },
        "bacs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumbersBACS"
          }
        },
        "eft": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumbersEFT"
          }
        },
        "international": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumbersInternational"
          }
        }
      }
    },
    "CredentialCreationOptions": {
      "description": "Options for credential creation with the WebAuthn API",
      "type": "object",
      "properties": {
        "publicKey": {
          "type": "object",
          "properties": {
            "attestation": {
              "type": "string",
              "enum": [
                "none",
                "indirect",
                "direct",
                "enterprise"
              ],
              "example": "none"
            },
            "authenticatorSelection": {
              "type": "object",
              "properties": {
                "authenticatorAttachment": {
                  "type": "string",
                  "enum": [
                    "platform",
                    "cross-platform"
                  ],
                  "example": "platform"
                },
                "requireResidentKey": {
                  "type": "boolean",
                  "example": true
                },
                "residentKey": {
                  "type": "string",
                  "enum": [
                    "discouraged",
                    "preferred",
                    "required"
                  ],
                  "example": "preferred"
                },
                "userVerification": {
                  "type": "string",
                  "enum": [
                    "discouraged",
                    "preferred",
                    "required"
                  ],
                  "example": "required"
                }
              }
            },
            "challenge": {
              "type": "string",
              "format": "base64url",
              "example": "7qmkJUXR0dOFnsW48evX3qKdCzlGjvvqAAvMDN+KTN0="
            },
            "pubKeyCredParams": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CredentialCreationOptionsPublicKeyPubKeyCredParamsItems0"
              },
              "example": [
                {
                  "alg": -7,
                  "type": "public-key"
                }
              ]
            },
            "rp": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "localhost"
                },
                "name": {
                  "type": "string",
                  "example": "Hanko Authentication Service"
                }
              }
            },
            "timeout": {
              "type": "number",
              "format": "int64",
              "example": 60000
            },
            "user": {
              "type": "object",
              "properties": {
                "displayName": {
                  "type": "string",
                  "example": "user@example.com"
                },
                "id": {
                  "type": "string",
                  "example": "pPQT9rwJRD7gVncsnCDNyN"
                },
                "name": {
                  "type": "string",
                  "example": "user@example.com"
                }
              }
            }
          }
        }
      },
      "externalDocs": {
        "url": "https://www.w3.org/TR/webauthn-2/#dictionary-makecredentialoptions"
      }
    },
    "CredentialCreationOptionsPublicKey": {
      "type": "object",
      "properties": {
        "attestation": {
          "type": "string",
          "enum": [
            "none",
            "indirect",
            "direct",
            "enterprise"
          ],
          "example": "none"
        },
        "authenticatorSelection": {
          "type": "object",
          "properties": {
            "authenticatorAttachment": {
              "type": "string",
              "enum": [
                "platform",
                "cross-platform"
              ],
              "example": "platform"
            },
            "requireResidentKey": {
              "type": "boolean",
              "example": true
            },
            "residentKey": {
              "type": "string",
              "enum": [
                "discouraged",
                "preferred",
                "required"
              ],
              "example": "preferred"
            },
            "userVerification": {
              "type": "string",
              "enum": [
                "discouraged",
                "preferred",
                "required"
              ],
              "example": "required"
            }
          }
        },
        "challenge": {
          "type": "string",
          "format": "base64url",
          "example": "7qmkJUXR0dOFnsW48evX3qKdCzlGjvvqAAvMDN+KTN0="
        },
        "pubKeyCredParams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CredentialCreationOptionsPublicKeyPubKeyCredParamsItems0"
          },
          "example": [
            {
              "alg": -7,
              "type": "public-key"
            }
          ]
        },
        "rp": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "localhost"
            },
            "name": {
              "type": "string",
              "example": "Hanko Authentication Service"
            }
          }
        },
        "timeout": {
          "type": "number",
          "format": "int64",
          "example": 60000
        },
        "user": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string",
              "example": "user@example.com"
            },
            "id": {
              "type": "string",
              "example": "pPQT9rwJRD7gVncsnCDNyN"
            },
            "name": {
              "type": "string",
              "example": "user@example.com"
            }
          }
        }
      }
    },
    "CredentialCreationOptionsPublicKeyAuthenticatorSelection": {
      "type": "object",
      "properties": {
        "authenticatorAttachment": {
          "type": "string",
          "enum": [
            "platform",
            "cross-platform"
          ],
          "example": "platform"
        },
        "requireResidentKey": {
          "type": "boolean",
          "example": true
        },
        "residentKey": {
          "type": "string",
          "enum": [
            "discouraged",
            "preferred",
            "required"
          ],
          "example": "preferred"
        },
        "userVerification": {
          "type": "string",
          "enum": [
            "discouraged",
            "preferred",
            "required"
          ],
          "example": "required"
        }
      }
    },
    "CredentialCreationOptionsPublicKeyPubKeyCredParamsItems0": {
      "type": "object",
      "properties": {
        "alg": {
          "type": "number"
        },
        "type": {
          "type": "string",
          "enum": [
            "public-key"
          ]
        }
      }
    },
    "CredentialCreationOptionsPublicKeyRp": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "localhost"
        },
        "name": {
          "type": "string",
          "example": "Hanko Authentication Service"
        }
      }
    },
    "CredentialCreationOptionsPublicKeyUser": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "example": "user@example.com"
        },
        "id": {
          "type": "string",
          "example": "pPQT9rwJRD7gVncsnCDNyN"
        },
        "name": {
          "type": "string",
          "example": "user@example.com"
        }
      }
    },
    "CredentialRequestOptions": {
      "description": "Options for assertion generation with the WebAuthn API",
      "type": "object",
      "properties": {
        "publicKey": {
          "type": "object",
          "properties": {
            "allowCredentials": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CredentialRequestOptionsPublicKeyAllowCredentialsItems0"
              }
            },
            "challenge": {
              "type": "string",
              "format": "base64url",
              "example": "qgOI+0KpGnl9NOqaT6dfsYvi96R87LgpErnvePeOgSU="
            },
            "rpId": {
              "type": "string",
              "example": "localhost"
            },
            "timeout": {
              "type": "number",
              "format": "int64",
              "example": 60000
            },
            "userVerification": {
              "type": "string",
              "enum": [
                "required",
                "preferred",
                "discouraged"
              ],
              "example": "required"
            }
          }
        }
      },
      "externalDocs": {
        "url": "https://www.w3.org/TR/webauthn-2/#dictionary-assertion-options"
      }
    },
    "CredentialRequestOptionsPublicKey": {
      "type": "object",
      "properties": {
        "allowCredentials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CredentialRequestOptionsPublicKeyAllowCredentialsItems0"
          }
        },
        "challenge": {
          "type": "string",
          "format": "base64url",
          "example": "qgOI+0KpGnl9NOqaT6dfsYvi96R87LgpErnvePeOgSU="
        },
        "rpId": {
          "type": "string",
          "example": "localhost"
        },
        "timeout": {
          "type": "number",
          "format": "int64",
          "example": 60000
        },
        "userVerification": {
          "type": "string",
          "enum": [
            "required",
            "preferred",
            "discouraged"
          ],
          "example": "required"
        }
      }
    },
    "CredentialRequestOptionsPublicKeyAllowCredentialsItems0": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "base64url",
          "example": "Mepptysj5ZZrTlg0qiLbsZ068OtQMeGVAikVy2n1hvvG..."
        },
        "type": {
          "type": "string",
          "enum": [
            "public-key"
          ],
          "example": "public-key"
        }
      }
    },
    "Email": {
      "type": "object",
      "title": "Email",
      "required": [
        "data",
        "primary",
        "type"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "data": {
          "type": "string"
        },
        "primary": {
          "type": "boolean",
          "format": "boolean"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "Either same as HTTP Status Code OR \u003e= 600 with HTTP Status Code 422.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "GetAccessTokenResp": {
      "type": "object",
      "title": "GetAccessTokenResp",
      "required": [
        "access_token",
        "item_id"
      ],
      "properties": {
        "access_token": {
          "type": "string"
        },
        "item_id": {
          "type": "string"
        }
      }
    },
    "GetAccountsResp": {
      "type": "object",
      "title": "GetAccountsResp",
      "required": [
        "accounts"
      ],
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountBase"
          }
        }
      }
    },
    "GetAuthAccountResp": {
      "type": "object",
      "title": "GetAuthAccountResp",
      "required": [
        "accounts",
        "numbers"
      ],
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountBase"
          }
        },
        "numbers": {
          "$ref": "#/definitions/AuthGetNumbers"
        }
      }
    },
    "GetIdentityResp": {
      "type": "object",
      "title": "GetIdentityResp",
      "required": [
        "identity"
      ],
      "properties": {
        "identity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountIdentity"
          }
        }
      }
    },
    "GetInfoResp": {
      "type": "object",
      "title": "GetInfoResp",
      "required": [
        "access_token",
        "item_id",
        "products"
      ],
      "properties": {
        "access_token": {
          "type": "string"
        },
        "item_id": {
          "type": "string"
        },
        "products": {
          "type": "string"
        }
      }
    },
    "GetTransactionsResp": {
      "type": "object",
      "title": "GetTransactionsResp",
      "required": [
        "latest_transactions"
      ],
      "properties": {
        "latest_transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transaction"
          }
        }
      }
    },
    "LinkTokenCreateResp": {
      "type": "object",
      "title": "LinkTokenCreateResp",
      "required": [
        "link_token"
      ],
      "properties": {
        "link_token": {
          "type": "string"
        }
      }
    },
    "Location": {
      "type": "object",
      "title": "Location",
      "required": [
        "address",
        "city",
        "region",
        "postal_code",
        "country",
        "lat",
        "lon",
        "store_number"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "address": {
          "$ref": "#/definitions/NullableString"
        },
        "city": {
          "$ref": "#/definitions/NullableString"
        },
        "country": {
          "$ref": "#/definitions/NullableString"
        },
        "lat": {
          "$ref": "#/definitions/NullableFloat64"
        },
        "lon": {
          "$ref": "#/definitions/NullableFloat64"
        },
        "postal_code": {
          "$ref": "#/definitions/NullableString"
        },
        "region": {
          "$ref": "#/definitions/NullableString"
        },
        "store_number": {
          "$ref": "#/definitions/NullableString"
        }
      }
    },
    "NullableAccountSubtype": {
      "type": "object",
      "title": "NullableAccountSubtype",
      "required": [
        "value",
        "isSet"
      ],
      "properties": {
        "isSet": {
          "type": "boolean",
          "format": "boolean"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "NullableFloat64": {
      "type": "object",
      "title": "NullableFloat64",
      "required": [
        "value",
        "isSet"
      ],
      "properties": {
        "isSet": {
          "type": "boolean",
          "format": "boolean"
        },
        "value": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "NullablePersonalFinanceCategory": {
      "type": "object",
      "title": "NullablePersonalFinanceCategory",
      "required": [
        "value",
        "isSet"
      ],
      "properties": {
        "isSet": {
          "type": "boolean",
          "format": "boolean"
        },
        "value": {
          "$ref": "#/definitions/PersonalFinanceCategory"
        }
      }
    },
    "NullableString": {
      "type": "object",
      "title": "NullableString",
      "required": [
        "value",
        "isSet"
      ],
      "properties": {
        "isSet": {
          "type": "boolean",
          "format": "boolean"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "NullableTime": {
      "type": "object",
      "title": "NullableTime",
      "required": [
        "value",
        "isSet"
      ],
      "properties": {
        "isSet": {
          "type": "boolean",
          "format": "boolean"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "NullableTransactionCode": {
      "type": "object",
      "title": "NullableTransactionCode",
      "required": [
        "value",
        "isSet"
      ],
      "properties": {
        "isSet": {
          "type": "boolean",
          "format": "boolean"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "NumbersACH": {
      "type": "object",
      "title": "NumbersACH",
      "required": [
        "account_id",
        "account",
        "routing",
        "wire_routing"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "account": {
          "type": "string"
        },
        "account_id": {
          "type": "string"
        },
        "routing": {
          "type": "string"
        },
        "wire_routing": {
          "$ref": "#/definitions/NullableString"
        }
      }
    },
    "NumbersBACS": {
      "type": "object",
      "title": "NumbersBACS",
      "required": [
        "account_id",
        "account",
        "sort_code"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "account": {
          "type": "string"
        },
        "account_id": {
          "type": "string"
        },
        "sort_code": {
          "type": "string"
        }
      }
    },
    "NumbersEFT": {
      "type": "object",
      "title": "NumbersEFT",
      "required": [
        "account_id",
        "account",
        "institution",
        "branch"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "account": {
          "type": "string"
        },
        "account_id": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "institution": {
          "type": "string"
        }
      }
    },
    "NumbersInternational": {
      "type": "object",
      "title": "NumbersInternational",
      "required": [
        "account_id",
        "iban",
        "bic"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "account_id": {
          "type": "string"
        },
        "bic": {
          "type": "string"
        },
        "iban": {
          "type": "string"
        }
      }
    },
    "Owner": {
      "type": "object",
      "title": "Owner",
      "required": [
        "names",
        "phone_numbers",
        "emails",
        "addresses"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "emails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Email"
          }
        },
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "phone_numbers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhoneNumber"
          }
        }
      }
    },
    "PaymentMeta": {
      "type": "object",
      "title": "PaymentMeta",
      "required": [
        "reference_number",
        "ppd_id",
        "payee",
        "by_order_of",
        "payer",
        "payment_method",
        "payment_processor",
        "reason"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "by_order_of": {
          "$ref": "#/definitions/NullableString"
        },
        "payee": {
          "$ref": "#/definitions/NullableString"
        },
        "payer": {
          "$ref": "#/definitions/NullableString"
        },
        "payment_method": {
          "$ref": "#/definitions/NullableString"
        },
        "payment_processor": {
          "$ref": "#/definitions/NullableString"
        },
        "ppd_id": {
          "$ref": "#/definitions/NullableString"
        },
        "reason": {
          "$ref": "#/definitions/NullableString"
        },
        "reference_number": {
          "$ref": "#/definitions/NullableString"
        }
      }
    },
    "PersonalFinanceCategory": {
      "type": "object",
      "title": "PersonalFinanceCategory",
      "required": [
        "primary",
        "detailed"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "detailed": {
          "type": "string"
        },
        "primary": {
          "type": "string"
        }
      }
    },
    "PhoneNumber": {
      "type": "object",
      "title": "PhoneNumber",
      "required": [
        "data",
        "primary",
        "type"
      ],
      "properties": {
        "": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "data": {
          "type": "string"
        },
        "primary": {
          "type": "boolean",
          "format": "boolean"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "PublicKeyCredentialAttestationResponse": {
      "description": "WebAuthn API response to a navigator.credentials.create() call",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "_18q6IjW09tiM4NSbsZjocUtGx00Muv5mN6LZCelCMDD..."
        },
        "rawId": {
          "type": "string",
          "example": "_18q6IjW09tiM4NSbsZjocUtGx00Muv5mN6LZCelCMDD..."
        },
        "response": {
          "type": "object",
          "properties": {
            "attestationObject": {
              "type": "string",
              "format": "base64url",
              "example": "o2NmbXRkbm9uZWdhdHRTdG10oGhhdXRoRGF0YVjfSZYN..."
            },
            "clientDataJson": {
              "type": "string",
              "format": "base64url",
              "example": "eyJ0eXBlIjoid2ViYXV0aG4uZ2V0IiwiY2hhbGxlbmdl..."
            },
            "transports": {
              "type": "string",
              "enum": [
                "usb",
                "nfc",
                "ble",
                "internal"
              ],
              "example": "internal"
            }
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "public-key"
          ],
          "example": "public-key"
        }
      }
    },
    "PublicKeyCredentialAttestationResponseResponse": {
      "type": "object",
      "properties": {
        "attestationObject": {
          "type": "string",
          "format": "base64url",
          "example": "o2NmbXRkbm9uZWdhdHRTdG10oGhhdXRoRGF0YVjfSZYN..."
        },
        "clientDataJson": {
          "type": "string",
          "format": "base64url",
          "example": "eyJ0eXBlIjoid2ViYXV0aG4uZ2V0IiwiY2hhbGxlbmdl..."
        },
        "transports": {
          "type": "string",
          "enum": [
            "usb",
            "nfc",
            "ble",
            "internal"
          ],
          "example": "internal"
        }
      }
    },
    "Transaction": {
      "type": "object",
      "title": "Transaction",
      "required": [
        "transaction_type",
        "pending_transaction_id",
        "category_id",
        "category",
        "location",
        "payment_meta",
        "account_owner",
        "name",
        "original_description",
        "account_id",
        "amount",
        "iso_currency_code",
        "unofficial_currency_code",
        "date",
        "pending",
        "transaction_id",
        "merchant_name",
        "check_number",
        "payment_channel",
        "authorized_date",
        "authorized_datetime",
        "datetime",
        "transaction_code",
        "personal_finance_category"
      ],
      "properties": {
        "account_id": {
          "type": "string"
        },
        "account_owner": {
          "$ref": "#/definitions/NullableString"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "authorized_date": {
          "$ref": "#/definitions/NullableString"
        },
        "authorized_datetime": {
          "$ref": "#/definitions/NullableTime"
        },
        "category": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "category_id": {
          "$ref": "#/definitions/NullableString"
        },
        "check_number": {
          "$ref": "#/definitions/NullableString"
        },
        "date": {
          "type": "string"
        },
        "datetime": {
          "$ref": "#/definitions/NullableTime"
        },
        "iso_currency_code": {
          "$ref": "#/definitions/NullableString"
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "merchant_name": {
          "$ref": "#/definitions/NullableString"
        },
        "name": {
          "type": "string"
        },
        "original_description": {
          "$ref": "#/definitions/NullableString"
        },
        "payment_channel": {
          "type": "string"
        },
        "payment_meta": {
          "$ref": "#/definitions/PaymentMeta"
        },
        "pending": {
          "type": "boolean",
          "format": "boolean"
        },
        "pending_transaction_id": {
          "$ref": "#/definitions/NullableString"
        },
        "personal_finance_category": {
          "$ref": "#/definitions/NullablePersonalFinanceCategory"
        },
        "transaction_code": {
          "$ref": "#/definitions/NullableTransactionCode"
        },
        "transaction_id": {
          "type": "string"
        },
        "transaction_type": {
          "type": "string"
        },
        "unofficial_currency_code": {
          "$ref": "#/definitions/NullableString"
        }
      }
    },
    "UUID4": {
      "type": "string",
      "format": "uuid4",
      "example": "c339547d-e17d-4ba7-8a1d-b3d5a4d17c1c"
    },
    "User": {
      "type": "object",
      "title": "User",
      "required": [
        "ID",
        "FirstName",
        "LastName",
        "Email"
      ],
      "properties": {
        "Address": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "LastName": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "PhoneNumber": {
          "type": "string"
        }
      }
    },
    "mapstringinterface": {
      "type": "object",
      "title": "mapstringinterface"
    }
  },
  "responses": {
    "GenericError": {
      "description": "General errors using same model as used by go-swagger for validation errors.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  }
}`))
}
