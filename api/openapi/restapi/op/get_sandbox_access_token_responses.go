// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/hellohq/hqservice/api/openapi/model"
)

// GetSandboxAccessTokenOKCode is the HTTP code returned for type GetSandboxAccessTokenOK
const GetSandboxAccessTokenOKCode int = 200

/*
GetSandboxAccessTokenOK A successful response.

swagger:response getSandboxAccessTokenOK
*/
type GetSandboxAccessTokenOK struct {

	/*
	  In: Body
	*/
	Payload *model.GetAccessTokenResp `json:"body,omitempty"`
}

// NewGetSandboxAccessTokenOK creates GetSandboxAccessTokenOK with default headers values
func NewGetSandboxAccessTokenOK() *GetSandboxAccessTokenOK {

	return &GetSandboxAccessTokenOK{}
}

// WithPayload adds the payload to the get sandbox access token o k response
func (o *GetSandboxAccessTokenOK) WithPayload(payload *model.GetAccessTokenResp) *GetSandboxAccessTokenOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get sandbox access token o k response
func (o *GetSandboxAccessTokenOK) SetPayload(payload *model.GetAccessTokenResp) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSandboxAccessTokenOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
GetSandboxAccessTokenDefault General errors using same model as used by go-swagger for validation errors.

swagger:response getSandboxAccessTokenDefault
*/
type GetSandboxAccessTokenDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *model.Error `json:"body,omitempty"`
}

// NewGetSandboxAccessTokenDefault creates GetSandboxAccessTokenDefault with default headers values
func NewGetSandboxAccessTokenDefault(code int) *GetSandboxAccessTokenDefault {
	if code <= 0 {
		code = 500
	}

	return &GetSandboxAccessTokenDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get sandbox access token default response
func (o *GetSandboxAccessTokenDefault) WithStatusCode(code int) *GetSandboxAccessTokenDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get sandbox access token default response
func (o *GetSandboxAccessTokenDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get sandbox access token default response
func (o *GetSandboxAccessTokenDefault) WithPayload(payload *model.Error) *GetSandboxAccessTokenDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get sandbox access token default response
func (o *GetSandboxAccessTokenDefault) SetPayload(payload *model.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSandboxAccessTokenDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
