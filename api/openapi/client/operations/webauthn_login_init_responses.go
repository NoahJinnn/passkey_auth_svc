// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/hellohq/hqservice/api/openapi/model"
)

// WebauthnLoginInitReader is a Reader for the WebauthnLoginInit structure.
type WebauthnLoginInitReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *WebauthnLoginInitReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewWebauthnLoginInitOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewWebauthnLoginInitOK creates a WebauthnLoginInitOK with default headers values
func NewWebauthnLoginInitOK() *WebauthnLoginInitOK {
	return &WebauthnLoginInitOK{}
}

/*
WebauthnLoginInitOK describes a response with status code 200, with default header values.

Successful initialization
*/
type WebauthnLoginInitOK struct {
	Payload *model.CredentialRequestOptions
}

// IsSuccess returns true when this webauthn login init o k response has a 2xx status code
func (o *WebauthnLoginInitOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this webauthn login init o k response has a 3xx status code
func (o *WebauthnLoginInitOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this webauthn login init o k response has a 4xx status code
func (o *WebauthnLoginInitOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this webauthn login init o k response has a 5xx status code
func (o *WebauthnLoginInitOK) IsServerError() bool {
	return false
}

// IsCode returns true when this webauthn login init o k response a status code equal to that given
func (o *WebauthnLoginInitOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the webauthn login init o k response
func (o *WebauthnLoginInitOK) Code() int {
	return 200
}

func (o *WebauthnLoginInitOK) Error() string {
	return fmt.Sprintf("[POST /webauthn/login/initialize][%d] webauthnLoginInitOK  %+v", 200, o.Payload)
}

func (o *WebauthnLoginInitOK) String() string {
	return fmt.Sprintf("[POST /webauthn/login/initialize][%d] webauthnLoginInitOK  %+v", 200, o.Payload)
}

func (o *WebauthnLoginInitOK) GetPayload() *model.CredentialRequestOptions {
	return o.Payload
}

func (o *WebauthnLoginInitOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.CredentialRequestOptions)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
WebauthnLoginInitBody webauthn login init body
swagger:model WebauthnLoginInitBody
*/
type WebauthnLoginInitBody struct {

	// The ID of the user on whose behalf WebAuthn login should be performed
	UserID struct {
		model.UUID4
	} `json:"user_id,omitempty"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (o *WebauthnLoginInitBody) UnmarshalJSON(data []byte) error {
	var props struct {

		// The ID of the user on whose behalf WebAuthn login should be performed
		UserID struct {
			model.UUID4
		} `json:"user_id,omitempty"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	o.UserID = props.UserID
	return nil
}

// Validate validates this webauthn login init body
func (o *WebauthnLoginInitBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateUserID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *WebauthnLoginInitBody) validateUserID(formats strfmt.Registry) error {
	if swag.IsZero(o.UserID) { // not required
		return nil
	}

	return nil
}

// ContextValidate validate this webauthn login init body based on the context it is used
func (o *WebauthnLoginInitBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateUserID(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *WebauthnLoginInitBody) contextValidateUserID(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (o *WebauthnLoginInitBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *WebauthnLoginInitBody) UnmarshalBinary(b []byte) error {
	var res WebauthnLoginInitBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
