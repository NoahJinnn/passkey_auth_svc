// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NullableString NullableString
//
// swagger:model NullableString
type NullableString struct {

	// is set
	// Required: true
	IsSet bool `json:"isSet"`

	// value
	// Required: true
	Value *string `json:"value"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (m *NullableString) UnmarshalJSON(data []byte) error {
	var props struct {

		// is set
		// Required: true
		IsSet bool `json:"isSet"`

		// value
		// Required: true
		Value *string `json:"value"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	m.IsSet = props.IsSet
	m.Value = props.Value
	return nil
}

// Validate validates this nullable string
func (m *NullableString) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIsSet(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NullableString) validateIsSet(formats strfmt.Registry) error {

	if err := validate.Required("isSet", "body", bool(m.IsSet)); err != nil {
		return err
	}

	return nil
}

func (m *NullableString) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", m.Value); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this nullable string based on context it is used
func (m *NullableString) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *NullableString) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NullableString) UnmarshalBinary(b []byte) error {
	var res NullableString
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
