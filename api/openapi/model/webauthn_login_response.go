// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// WebauthnLoginResponse Response after a successful login with webauthn
//
// swagger:model WebauthnLoginResponse
type WebauthnLoginResponse struct {

	// credential id
	CredentialID string `json:"credential_id,omitempty"`

	// user id
	// Format: uuid4
	UserID strfmt.UUID4 `json:"user_id,omitempty"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (m *WebauthnLoginResponse) UnmarshalJSON(data []byte) error {
	var props struct {

		// credential id
		CredentialID string `json:"credential_id,omitempty"`

		// user id
		// Format: uuid4
		UserID strfmt.UUID4 `json:"user_id,omitempty"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	m.CredentialID = props.CredentialID
	m.UserID = props.UserID
	return nil
}

// Validate validates this webauthn login response
func (m *WebauthnLoginResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUserID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WebauthnLoginResponse) validateUserID(formats strfmt.Registry) error {
	if swag.IsZero(m.UserID) { // not required
		return nil
	}

	if err := validate.FormatOf("user_id", "body", "uuid4", m.UserID.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this webauthn login response based on context it is used
func (m *WebauthnLoginResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *WebauthnLoginResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WebauthnLoginResponse) UnmarshalBinary(b []byte) error {
	var res WebauthnLoginResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
