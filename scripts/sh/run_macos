#!/bin/sh

PROFILE=$1
scriptsdir=$( dirname -- "$0"; )
cd $scriptsdir/../../

echo "⚡️ Kill old ngrok"
kill -9 "$(pgrep ngrok)"
sleep 0.5

# Start NGROK in background
echo "⚡️ Starting ngrok"
ngrok http 17000 >/dev/null &
sleep 0.5

NGROK_REMOTE_URL="$(curl http://localhost:4040/api/tunnels | jq ".tunnels[0].public_url")" # get ngrok url from ngrok's tunnel response

# Get NGROK dynamic URL from its own exposed local API
# NGROK_REMOTE_URL="$(curl http://localhost:4040/api/tunnels | jq ".tunnels[0].public_url")" # get ngrok url from ngrok's tunnel response
if test -z "${NGROK_REMOTE_URL}"
then
  echo "❌ ERROR: ngrok doesn't seem to return a valid URL (${NGROK_REMOTE_URL})."
  exit 1
fi

# Trim double quotes from variable
NGROK_REMOTE_URL=$(echo ${NGROK_REMOTE_URL} | tr -d '"')
# If http protocol is returned, replace by https
NGROK_REMOTE_URL=${NGROK_REMOTE_URL/http:\/\//https:\/\/}
# Trim https protocol from variable
NGROK_REMOTE_URL=${NGROK_REMOTE_URL/https:\/\//}

echo "\n🌍 Your ngrok remote URL is 👉 ${bold}${NGROK_REMOTE_URL}"

doppler configure set config=$PROFILE project=hellohq
doppler secrets set AUTH_DOMAIN $NGROK_REMOTE_URL

doppler configure set config=$PROFILE project=hqservice
doppler secrets set AUTH_DOMAIN $NGROK_REMOTE_URL

if ! command -v doppler &> /dev/null; then
    echo "Doppler is not installed or not in PATH, please run 'task scripts:install:doppler' and try again"

elif ! command -v air &> /dev/null; then
    echo "Air is not installed or not in GOPATH, please run 'task scripts:install:gotools' and try again. Make sure your shell can lookup for GOBIN path by 'export PATH=$PATH:$(go env GOPATH)/bin'"
else
    echo "HQ service started by exec built app"
    doppler configure set config=$PROFILE project=hqservice # doppler profile to run hqservice
    AUTH_DOMAIN=$(doppler secrets get AUTH_DOMAIN) # get AUTH_DOMAIN value from doppler

    doppler run -- docker compose -f docker/docker-compose.yml down --volumes  &&
    doppler run -- docker compose -f docker/docker-compose.yml up -d --remove-orphans &&
    doppler run -- air serve "--wa.id $AUTH_DOMAIN --wa.origins "https://${AUTH_DOMAIN}""
fi
