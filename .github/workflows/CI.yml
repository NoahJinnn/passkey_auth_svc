name: CI

on:
  pull_request:
    branches: [main]
    paths-ignore:
      - "**.md"

env:
  GO_VERSION: "^1.19"
  GOFLAGS: "-mod=readonly"
  SVC_ACCOUNT: hq-gh-sa@hellohq.iam.gserviceaccount.com
  IMAGE: asia-docker.pkg.dev/hellohq/be/core

jobs:
  # lint:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 30
  #   steps:
  #     - uses: actions/setup-go@v4
  #       with:
  #         go-version: ${{ env.GO_VERSION }}
  #         cache: false
  #     - uses: actions/checkout@v3
  #     - name: golangci-lint
  #       uses: golangci/golangci-lint-action@v3
  #       with:
  #         version: v1.52.0
  #         args: --timeout=3m --issues-exit-code=0 ./...
  #     - uses: hadolint/hadolint-action@v3.1.0
  #       with:
  #         failure-threshold: error
  #         verbose: true
  #         dockerfile: ./Dockerfile

  # test:
  #   if: github.actor != 'dependabot[bot]'
  #   runs-on: "ubuntu-latest"
  #   timeout-minutes: 30
  #   steps:
  #     - uses: actions/setup-go@v4
  #       with:
  #         go-version: ${{ env.GO_VERSION }}
  #     - uses: actions/checkout@v3

  #     - uses: actions/cache@v3
  #       with:
  #         path: |
  #           ~/go/bin
  #           ~/go/pkg
  #           ~/go/src
  #           ~/.cache/go-build
  #           ~/.cache/golangci-lint
  #           .gobincache
  #         key: v3-test-${{ runner.os }}-${{ hashFiles('go.mod') }}
  #         restore-keys: |
  #           v3-test-${{ runner.os }}-

  #     - name: Install Doppler CLI
  #       uses: dopplerhq/cli-action@v2

  #     - name: Test CLI
  #       run: doppler --version

  #     - name: Install Task
  #       uses: arduino/setup-task@v1
  #       with:
  #         repo-token: ${{ secrets.GITHUB_TOKEN }}
  #         version: 3.x

  #     - name: Run test
  #       env:
  #         DOPPLER_TOKEN: ${{ secrets.STAGING_TOKEN }}
  #       run: task scripts:test PROFILE=dev

  build:
    if: github.actor != 'dependabot[bot]'
    # needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
      id-token: "write"
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg
            ~/.cache/go-build
          key: v1-build-${{ runner.os }}-${{ hashFiles('go.mod') }}
          restore-keys: |
            v1-build-${{ runner.os }}-

      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v1"
        with:
          token_format: access_token
          workload_identity_provider: "${{secrets.WIF_PROVIDER}}"
          service_account: "${{env.SVC_ACCOUNT}}"

      - name: Login to GCR
        uses: docker/login-action@v3
        with:
          registry: asia-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{env.IMAGE}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

        #   - name: Building and pushing the image
        # uses: RafikFarhad/push-to-gcr-github-action@v5-beta
        # with:
        #   registry: gcr.io
        #   project_id: hellohq
        #   image_name: ${{env.IMAGE}}
        #   image_tag: latest
        #   context: .
