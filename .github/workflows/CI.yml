name: CI

on:
  pull_request:
    branches: [main]
    paths-ignore:
      - '**.md'
permissions:
  contents: read

env:
  GO_VERSION: "^1.19"
  GOFLAGS: "-mod=readonly"

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.52.0
          args: --timeout=3m --issues-exit-code=0 ./...
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./docker/Dockerfile

  test:
    runs-on: "ubuntu-latest"
    timeout-minutes: 30
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/go/bin
            ~/go/pkg
            ~/go/src
            ~/.cache/go-build
            ~/.cache/golangci-lint
            .gobincache
          key: v3-test-${{ runner.os }}-${{ hashFiles('go.mod') }}
          restore-keys: |
            v3-test-${{ runner.os }}-

      - uses: dopplerhq/cli-action@v2
      - name: Test CLI
        run: doppler --version
      - name: Install tools
        run: |
          sudo apt update
          sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d
          ./bin/task scripts:install:gotools

      - name: Run test
        run: ./bin/task scripts:test

      - name: Report code coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
        if: env.COVERALLS_TOKEN
        run: |
          scripts/cover
          .gobincache/goveralls -coverprofile=cover.out -service=GitHub

  build:
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg
            ~/.cache/go-build
          key: v1-build-${{ runner.os }}-${{ hashFiles('go.mod') }}
          restore-keys: |
            v1-build-${{ runner.os }}-

      - name: task scripts:build:binary
        run: |
          sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d
          ./bin/task scripts:build:binary

  
