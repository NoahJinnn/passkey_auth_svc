name: CD

on:
  push:
    branches: [main]
    tags: [v*]

permissions:
  contents: write
  pull-requests: write
  packages: read

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  REPO_NAME: hellohq/hqservice
  PKG_NAME: core
  SVC_ACCOUNT: hq-gh-sa@hellohq.iam.gserviceaccount.com
  IMAGE: asia-docker.pkg.dev/hellohq/be/core

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      build: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: go
          default-branch: main
          pull-request-header: "(:robot:) create a new release PR on ${{ github.ref_name }}"
          commit-search-depth: 100

  deploy:
    permissions:
      contents: "read"
      id-token: "write"
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v1"
        with:
          workload_identity_provider: "${{secrets.WIF_PROVIDER}}"
          service_account: "${{env.SVC_ACCOUNT}}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"
        with:
          version: ">= 363.0.0"

      - name: "Use gcloud CLI"
        run: |
          gcloud auth print-access-token \
          --impersonate-service-account ${{env.SVC_ACCOUNT}} | docker login -u oauth2accesstoken --password-stdin https://asia-docker.pkg.dev
          
          export IMAGE_TAG=${{env.IMAGE}}:latest
          docker pull $IMAGE_TAG

          export HQ_X_POSTGRES_HOST=${{ secrets.HQ_X_POSTGRES_HOST }}
          export HQ_X_POSTGRES_PORT=${{ secrets.HQ_X_POSTGRES_PORT }}
          export HQ_AUTH_ADDR_PORT=${{ secrets.HQ_AUTH_ADDR_PORT }}
          export HQ_NETWORTH_ADDR_PORT=${{ secrets.HQ_NETWORTH_ADDR_PORT }}
          export DOPPLER_TOKEN=${{ secrets.STAGING_TOKEN }}
          docker compose stop hqsvc || true
          docker compose rm -f hqsvc || true
          docker compose up -d hqsvc

      # - uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.STAGING_HOST }}
      #     port: ${{ secrets.STAGING_SSH_PORT }}
      #     username: trannguyen
      #     key: ${{ secrets.STAGING_KEY }}
      #     script: |
      #       cd $HOME

      #       export CR_PAT=${{ secrets.GITHUB_TOKEN }}
      #       echo $CR_PAT | docker login ${{ env.REGISTRY }} -u ${{ github.repository }} --password-stdin
      #       export IMAGE_TAG=${{ env.REGISTRY }}/${{ env.REPO_NAME }}/${{ env.PKG_NAME }}:latest
      #       docker pull $IMAGE_TAG

      #       export HQ_X_POSTGRES_HOST=${{ secrets.HQ_X_POSTGRES_HOST }}
      #       export HQ_X_POSTGRES_PORT=${{ secrets.HQ_X_POSTGRES_PORT }}
      #       export HQ_AUTH_ADDR_PORT=${{ secrets.HQ_AUTH_ADDR_PORT }}
      #       export HQ_NETWORTH_ADDR_PORT=${{ secrets.HQ_NETWORTH_ADDR_PORT }}
      #       export DOPPLER_TOKEN=${{ secrets.STAGING_TOKEN }}
      #       docker compose stop hqsvc || true
      #       docker compose rm -f hqsvc || true
      #       docker compose up -d hqsvc

      #       docker logout ${{ env.REGISTRY }}
