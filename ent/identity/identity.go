// Code generated by ent, DO NOT EDIT.

package identity

const (
	// Label holds the string label denoting the identity type in the database.
	Label = "identity"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldProviderID holds the string denoting the provider_id field in the database.
	FieldProviderID = "provider_id"
	// FieldProviderName holds the string denoting the provider_name field in the database.
	FieldProviderName = "provider_name"
	// FieldData holds the string denoting the data field in the database.
	FieldData = "data"
	// FieldEmailID holds the string denoting the email_id field in the database.
	FieldEmailID = "email_id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// EdgeEmail holds the string denoting the email edge name in mutations.
	EdgeEmail = "email"
	// Table holds the table name of the identity in the database.
	Table = "identities"
	// EmailTable is the table that holds the email relation/edge.
	EmailTable = "identities"
	// EmailInverseTable is the table name for the Email entity.
	// It exists in this package in order to avoid circular dependency with the "email" package.
	EmailInverseTable = "emails"
	// EmailColumn is the table column denoting the email relation/edge.
	EmailColumn = "email_id"
)

// Columns holds all SQL columns for identity fields.
var Columns = []string{
	FieldID,
	FieldProviderID,
	FieldProviderName,
	FieldData,
	FieldEmailID,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
