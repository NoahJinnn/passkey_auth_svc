// Code generated by ent, DO NOT EDIT.

package webauthncredentialtransport

import (
	"github.com/gofrs/uuid"
)

const (
	// Label holds the string label denoting the webauthncredentialtransport type in the database.
	Label = "webauthn_credential_transport"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldWebauthnCredentialID holds the string denoting the webauthn_credential_id field in the database.
	FieldWebauthnCredentialID = "webauthn_credential_id"
	// EdgeWebauthnCredential holds the string denoting the webauthn_credential edge name in mutations.
	EdgeWebauthnCredential = "webauthn_credential"
	// Table holds the table name of the webauthncredentialtransport in the database.
	Table = "webauthn_credential_transports"
	// WebauthnCredentialTable is the table that holds the webauthn_credential relation/edge.
	WebauthnCredentialTable = "webauthn_credential_transports"
	// WebauthnCredentialInverseTable is the table name for the WebauthnCredential entity.
	// It exists in this package in order to avoid circular dependency with the "webauthncredential" package.
	WebauthnCredentialInverseTable = "webauthn_credentials"
	// WebauthnCredentialColumn is the table column denoting the webauthn_credential relation/edge.
	WebauthnCredentialColumn = "webauthn_credential_id"
)

// Columns holds all SQL columns for webauthncredentialtransport fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldWebauthnCredentialID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
