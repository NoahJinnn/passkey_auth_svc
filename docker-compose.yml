version: "3.8"

volumes:
  postgres:

services:
  postgres:
    image: "postgres:15.2"
    container_name: "hq_postgres"
    restart: "always"
    shm_size: "256m"
    ports:
      - "${mono_postgres_addr_port:-0}:5432"
    volumes:
      - "postgres:/var/lib/postgresql/data"
      - "${mono_postgres_tls_cert}:/dev.crt"
      - "${mono_postgres_tls_key}:/dev.key"
    environment:
      POSTGRES_PASSWORD: "postgres"
    entrypoint:
      - bash
      - -c
      - |
        set -x -e -o pipefail
        install -m 0440 -o root -g postgres /dev.crt /server.crt
        install -m 0440 -o root -g postgres /dev.key /server.key
        exec docker-entrypoint.sh postgres -c ssl=on \
            --ssl_cert_file=/server.crt --ssl_key_file=/server.key

  # postgres-setup:
  #   depends_on:
  #     - postgres
  #   image: "postgres:15.2" # We're using 12.
  #   container_name: "mono_postgres-setup"
  #   restart: "no"
  #   volumes:
  #     - "./scripts/postgres-setup:/usr/local/bin/postgres-setup"
  #   environment:
  #     MONO_HQ_POSTGRES_AUTH_LOGIN: "${MONO_HQ_POSTGRES_AUTH_LOGIN}"
  #     MONO_HQ_POSTGRES_AUTH_PASS: "${MONO_HQ_POSTGRES_AUTH_PASS}"
  #     PGHOST: "postgres"
  #     PGUSER: "postgres"
  #     PGPASSWORD: "postgres"
  #   command:
  #     - bash
  #     - -c
  #     - |
  #       while ! timeout --foreground 0.5 bash -c "echo -n >/dev/tcp/$${PGHOST}/$${PGPORT:-5432}" 2>/dev/null; do
  #           echo waiting for postgres
  #           sleep 0.5
  #       done
  #       set -x -e -o pipefail
  #       postgres-setup | psql

  hq:
    build:
      context: .
      dockerfile: use `./scripts/build` instead of `docker-compose build`
    image: "go-monolith-example:latest"
    container_name: hqservice
    restart: always
    ports:
      - "${MONO_HQ_ADDR_PORT:-0}:17000"
    volumes:
      - "${MONO_TLS_CA_CERT}:/ca.crt"
      - "${MONO_HQ_TLS_CERT}:/auth.crt"
      - "${MONO_HQ_TLS_CERT_INT}:/auth-int.crt"
      - "${MONO_HQ_TLS_KEY}:/auth.key"
      - "${MONO_HQ_TLS_KEY_INT}:/auth-int.key"
    environment:
      MONO_ADDR_HOST: "${MONO_ADDR_HOST}"
      MONO_ADDR_HOST_INT: "${MONO_ADDR_HOST_INT}"
      MONO_TLS_CA_CERT: "/ca.crt"
      MONO_X_POSTGRES_ADDR_HOST: "postgres"
      MONO_HQ_POSTGRES_AUTH_LOGIN: "${MONO_HQ_POSTGRES_AUTH_LOGIN}"
      MONO_HQ_POSTGRES_AUTH_PASS: "${MONO_HQ_POSTGRES_AUTH_PASS}"
      MONO_HQ_TLS_CERT: "/auth.crt"
      MONO_HQ_TLS_CERT_INT: "/auth-int.crt"
      MONO_HQ_TLS_KEY: "/auth.key"
      MONO_HQ_TLS_KEY_INT: "/auth-int.key"
