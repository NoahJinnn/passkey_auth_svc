// Code generated by ent, DO NOT EDIT.

package manualitem

import (
	"entgo.io/ent/dialect/sql"
	"github.com/gofrs/uuid"
	"github.com/hellohq/hqservice/internal/db/sqlite/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldLTE(FieldID, id))
}

// ProviderName applies equality check predicate on the "provider_name" field. It's identical to ProviderNameEQ.
func ProviderName(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldEQ(FieldProviderName, v))
}

// ItemTableID applies equality check predicate on the "item_table_id" field. It's identical to ItemTableIDEQ.
func ItemTableID(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldEQ(FieldItemTableID, v))
}

// Type applies equality check predicate on the "type" field. It's identical to TypeEQ.
func Type(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldEQ(FieldType, v))
}

// Category applies equality check predicate on the "category" field. It's identical to CategoryEQ.
func Category(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldEQ(FieldCategory, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldEQ(FieldDescription, v))
}

// Value applies equality check predicate on the "value" field. It's identical to ValueEQ.
func Value(v float64) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldEQ(FieldValue, v))
}

// ProviderNameEQ applies the EQ predicate on the "provider_name" field.
func ProviderNameEQ(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldEQ(FieldProviderName, v))
}

// ProviderNameNEQ applies the NEQ predicate on the "provider_name" field.
func ProviderNameNEQ(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldNEQ(FieldProviderName, v))
}

// ProviderNameIn applies the In predicate on the "provider_name" field.
func ProviderNameIn(vs ...string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldIn(FieldProviderName, vs...))
}

// ProviderNameNotIn applies the NotIn predicate on the "provider_name" field.
func ProviderNameNotIn(vs ...string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldNotIn(FieldProviderName, vs...))
}

// ProviderNameGT applies the GT predicate on the "provider_name" field.
func ProviderNameGT(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldGT(FieldProviderName, v))
}

// ProviderNameGTE applies the GTE predicate on the "provider_name" field.
func ProviderNameGTE(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldGTE(FieldProviderName, v))
}

// ProviderNameLT applies the LT predicate on the "provider_name" field.
func ProviderNameLT(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldLT(FieldProviderName, v))
}

// ProviderNameLTE applies the LTE predicate on the "provider_name" field.
func ProviderNameLTE(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldLTE(FieldProviderName, v))
}

// ProviderNameContains applies the Contains predicate on the "provider_name" field.
func ProviderNameContains(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldContains(FieldProviderName, v))
}

// ProviderNameHasPrefix applies the HasPrefix predicate on the "provider_name" field.
func ProviderNameHasPrefix(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldHasPrefix(FieldProviderName, v))
}

// ProviderNameHasSuffix applies the HasSuffix predicate on the "provider_name" field.
func ProviderNameHasSuffix(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldHasSuffix(FieldProviderName, v))
}

// ProviderNameEqualFold applies the EqualFold predicate on the "provider_name" field.
func ProviderNameEqualFold(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldEqualFold(FieldProviderName, v))
}

// ProviderNameContainsFold applies the ContainsFold predicate on the "provider_name" field.
func ProviderNameContainsFold(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldContainsFold(FieldProviderName, v))
}

// ItemTableIDEQ applies the EQ predicate on the "item_table_id" field.
func ItemTableIDEQ(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldEQ(FieldItemTableID, v))
}

// ItemTableIDNEQ applies the NEQ predicate on the "item_table_id" field.
func ItemTableIDNEQ(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldNEQ(FieldItemTableID, v))
}

// ItemTableIDIn applies the In predicate on the "item_table_id" field.
func ItemTableIDIn(vs ...string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldIn(FieldItemTableID, vs...))
}

// ItemTableIDNotIn applies the NotIn predicate on the "item_table_id" field.
func ItemTableIDNotIn(vs ...string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldNotIn(FieldItemTableID, vs...))
}

// ItemTableIDGT applies the GT predicate on the "item_table_id" field.
func ItemTableIDGT(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldGT(FieldItemTableID, v))
}

// ItemTableIDGTE applies the GTE predicate on the "item_table_id" field.
func ItemTableIDGTE(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldGTE(FieldItemTableID, v))
}

// ItemTableIDLT applies the LT predicate on the "item_table_id" field.
func ItemTableIDLT(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldLT(FieldItemTableID, v))
}

// ItemTableIDLTE applies the LTE predicate on the "item_table_id" field.
func ItemTableIDLTE(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldLTE(FieldItemTableID, v))
}

// ItemTableIDContains applies the Contains predicate on the "item_table_id" field.
func ItemTableIDContains(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldContains(FieldItemTableID, v))
}

// ItemTableIDHasPrefix applies the HasPrefix predicate on the "item_table_id" field.
func ItemTableIDHasPrefix(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldHasPrefix(FieldItemTableID, v))
}

// ItemTableIDHasSuffix applies the HasSuffix predicate on the "item_table_id" field.
func ItemTableIDHasSuffix(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldHasSuffix(FieldItemTableID, v))
}

// ItemTableIDEqualFold applies the EqualFold predicate on the "item_table_id" field.
func ItemTableIDEqualFold(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldEqualFold(FieldItemTableID, v))
}

// ItemTableIDContainsFold applies the ContainsFold predicate on the "item_table_id" field.
func ItemTableIDContainsFold(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldContainsFold(FieldItemTableID, v))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldNotIn(FieldType, vs...))
}

// TypeGT applies the GT predicate on the "type" field.
func TypeGT(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldGT(FieldType, v))
}

// TypeGTE applies the GTE predicate on the "type" field.
func TypeGTE(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldGTE(FieldType, v))
}

// TypeLT applies the LT predicate on the "type" field.
func TypeLT(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldLT(FieldType, v))
}

// TypeLTE applies the LTE predicate on the "type" field.
func TypeLTE(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldLTE(FieldType, v))
}

// TypeContains applies the Contains predicate on the "type" field.
func TypeContains(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldContains(FieldType, v))
}

// TypeHasPrefix applies the HasPrefix predicate on the "type" field.
func TypeHasPrefix(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldHasPrefix(FieldType, v))
}

// TypeHasSuffix applies the HasSuffix predicate on the "type" field.
func TypeHasSuffix(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldHasSuffix(FieldType, v))
}

// TypeEqualFold applies the EqualFold predicate on the "type" field.
func TypeEqualFold(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldEqualFold(FieldType, v))
}

// TypeContainsFold applies the ContainsFold predicate on the "type" field.
func TypeContainsFold(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldContainsFold(FieldType, v))
}

// CategoryEQ applies the EQ predicate on the "category" field.
func CategoryEQ(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldEQ(FieldCategory, v))
}

// CategoryNEQ applies the NEQ predicate on the "category" field.
func CategoryNEQ(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldNEQ(FieldCategory, v))
}

// CategoryIn applies the In predicate on the "category" field.
func CategoryIn(vs ...string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldIn(FieldCategory, vs...))
}

// CategoryNotIn applies the NotIn predicate on the "category" field.
func CategoryNotIn(vs ...string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldNotIn(FieldCategory, vs...))
}

// CategoryGT applies the GT predicate on the "category" field.
func CategoryGT(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldGT(FieldCategory, v))
}

// CategoryGTE applies the GTE predicate on the "category" field.
func CategoryGTE(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldGTE(FieldCategory, v))
}

// CategoryLT applies the LT predicate on the "category" field.
func CategoryLT(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldLT(FieldCategory, v))
}

// CategoryLTE applies the LTE predicate on the "category" field.
func CategoryLTE(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldLTE(FieldCategory, v))
}

// CategoryContains applies the Contains predicate on the "category" field.
func CategoryContains(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldContains(FieldCategory, v))
}

// CategoryHasPrefix applies the HasPrefix predicate on the "category" field.
func CategoryHasPrefix(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldHasPrefix(FieldCategory, v))
}

// CategoryHasSuffix applies the HasSuffix predicate on the "category" field.
func CategoryHasSuffix(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldHasSuffix(FieldCategory, v))
}

// CategoryEqualFold applies the EqualFold predicate on the "category" field.
func CategoryEqualFold(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldEqualFold(FieldCategory, v))
}

// CategoryContainsFold applies the ContainsFold predicate on the "category" field.
func CategoryContainsFold(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldContainsFold(FieldCategory, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.ManualItem {
	return predicate.ManualItem(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.ManualItem {
	return predicate.ManualItem(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldContainsFold(FieldDescription, v))
}

// ValueEQ applies the EQ predicate on the "value" field.
func ValueEQ(v float64) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldEQ(FieldValue, v))
}

// ValueNEQ applies the NEQ predicate on the "value" field.
func ValueNEQ(v float64) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldNEQ(FieldValue, v))
}

// ValueIn applies the In predicate on the "value" field.
func ValueIn(vs ...float64) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldIn(FieldValue, vs...))
}

// ValueNotIn applies the NotIn predicate on the "value" field.
func ValueNotIn(vs ...float64) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldNotIn(FieldValue, vs...))
}

// ValueGT applies the GT predicate on the "value" field.
func ValueGT(v float64) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldGT(FieldValue, v))
}

// ValueGTE applies the GTE predicate on the "value" field.
func ValueGTE(v float64) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldGTE(FieldValue, v))
}

// ValueLT applies the LT predicate on the "value" field.
func ValueLT(v float64) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldLT(FieldValue, v))
}

// ValueLTE applies the LTE predicate on the "value" field.
func ValueLTE(v float64) predicate.ManualItem {
	return predicate.ManualItem(sql.FieldLTE(FieldValue, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ManualItem) predicate.ManualItem {
	return predicate.ManualItem(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ManualItem) predicate.ManualItem {
	return predicate.ManualItem(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ManualItem) predicate.ManualItem {
	return predicate.ManualItem(func(s *sql.Selector) {
		p(s.Not())
	})
}
