// Code generated by ent, DO NOT EDIT.

package manualasset

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/gofrs/uuid"
	"github.com/hellohq/hqservice/internal/db/sqlite/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldLTE(FieldID, id))
}

// ProviderName applies equality check predicate on the "provider_name" field. It's identical to ProviderNameEQ.
func ProviderName(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldEQ(FieldProviderName, v))
}

// AssetTableID applies equality check predicate on the "asset_table_id" field. It's identical to AssetTableIDEQ.
func AssetTableID(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldEQ(FieldAssetTableID, v))
}

// AssetType applies equality check predicate on the "asset_type" field. It's identical to AssetTypeEQ.
func AssetType(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldEQ(FieldAssetType, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldEQ(FieldDescription, v))
}

// Value applies equality check predicate on the "value" field. It's identical to ValueEQ.
func Value(v float64) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldEQ(FieldValue, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldEQ(FieldUpdatedAt, v))
}

// ProviderNameEQ applies the EQ predicate on the "provider_name" field.
func ProviderNameEQ(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldEQ(FieldProviderName, v))
}

// ProviderNameNEQ applies the NEQ predicate on the "provider_name" field.
func ProviderNameNEQ(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldNEQ(FieldProviderName, v))
}

// ProviderNameIn applies the In predicate on the "provider_name" field.
func ProviderNameIn(vs ...string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldIn(FieldProviderName, vs...))
}

// ProviderNameNotIn applies the NotIn predicate on the "provider_name" field.
func ProviderNameNotIn(vs ...string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldNotIn(FieldProviderName, vs...))
}

// ProviderNameGT applies the GT predicate on the "provider_name" field.
func ProviderNameGT(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldGT(FieldProviderName, v))
}

// ProviderNameGTE applies the GTE predicate on the "provider_name" field.
func ProviderNameGTE(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldGTE(FieldProviderName, v))
}

// ProviderNameLT applies the LT predicate on the "provider_name" field.
func ProviderNameLT(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldLT(FieldProviderName, v))
}

// ProviderNameLTE applies the LTE predicate on the "provider_name" field.
func ProviderNameLTE(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldLTE(FieldProviderName, v))
}

// ProviderNameContains applies the Contains predicate on the "provider_name" field.
func ProviderNameContains(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldContains(FieldProviderName, v))
}

// ProviderNameHasPrefix applies the HasPrefix predicate on the "provider_name" field.
func ProviderNameHasPrefix(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldHasPrefix(FieldProviderName, v))
}

// ProviderNameHasSuffix applies the HasSuffix predicate on the "provider_name" field.
func ProviderNameHasSuffix(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldHasSuffix(FieldProviderName, v))
}

// ProviderNameEqualFold applies the EqualFold predicate on the "provider_name" field.
func ProviderNameEqualFold(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldEqualFold(FieldProviderName, v))
}

// ProviderNameContainsFold applies the ContainsFold predicate on the "provider_name" field.
func ProviderNameContainsFold(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldContainsFold(FieldProviderName, v))
}

// AssetTableIDEQ applies the EQ predicate on the "asset_table_id" field.
func AssetTableIDEQ(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldEQ(FieldAssetTableID, v))
}

// AssetTableIDNEQ applies the NEQ predicate on the "asset_table_id" field.
func AssetTableIDNEQ(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldNEQ(FieldAssetTableID, v))
}

// AssetTableIDIn applies the In predicate on the "asset_table_id" field.
func AssetTableIDIn(vs ...string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldIn(FieldAssetTableID, vs...))
}

// AssetTableIDNotIn applies the NotIn predicate on the "asset_table_id" field.
func AssetTableIDNotIn(vs ...string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldNotIn(FieldAssetTableID, vs...))
}

// AssetTableIDGT applies the GT predicate on the "asset_table_id" field.
func AssetTableIDGT(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldGT(FieldAssetTableID, v))
}

// AssetTableIDGTE applies the GTE predicate on the "asset_table_id" field.
func AssetTableIDGTE(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldGTE(FieldAssetTableID, v))
}

// AssetTableIDLT applies the LT predicate on the "asset_table_id" field.
func AssetTableIDLT(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldLT(FieldAssetTableID, v))
}

// AssetTableIDLTE applies the LTE predicate on the "asset_table_id" field.
func AssetTableIDLTE(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldLTE(FieldAssetTableID, v))
}

// AssetTableIDContains applies the Contains predicate on the "asset_table_id" field.
func AssetTableIDContains(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldContains(FieldAssetTableID, v))
}

// AssetTableIDHasPrefix applies the HasPrefix predicate on the "asset_table_id" field.
func AssetTableIDHasPrefix(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldHasPrefix(FieldAssetTableID, v))
}

// AssetTableIDHasSuffix applies the HasSuffix predicate on the "asset_table_id" field.
func AssetTableIDHasSuffix(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldHasSuffix(FieldAssetTableID, v))
}

// AssetTableIDEqualFold applies the EqualFold predicate on the "asset_table_id" field.
func AssetTableIDEqualFold(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldEqualFold(FieldAssetTableID, v))
}

// AssetTableIDContainsFold applies the ContainsFold predicate on the "asset_table_id" field.
func AssetTableIDContainsFold(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldContainsFold(FieldAssetTableID, v))
}

// AssetTypeEQ applies the EQ predicate on the "asset_type" field.
func AssetTypeEQ(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldEQ(FieldAssetType, v))
}

// AssetTypeNEQ applies the NEQ predicate on the "asset_type" field.
func AssetTypeNEQ(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldNEQ(FieldAssetType, v))
}

// AssetTypeIn applies the In predicate on the "asset_type" field.
func AssetTypeIn(vs ...string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldIn(FieldAssetType, vs...))
}

// AssetTypeNotIn applies the NotIn predicate on the "asset_type" field.
func AssetTypeNotIn(vs ...string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldNotIn(FieldAssetType, vs...))
}

// AssetTypeGT applies the GT predicate on the "asset_type" field.
func AssetTypeGT(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldGT(FieldAssetType, v))
}

// AssetTypeGTE applies the GTE predicate on the "asset_type" field.
func AssetTypeGTE(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldGTE(FieldAssetType, v))
}

// AssetTypeLT applies the LT predicate on the "asset_type" field.
func AssetTypeLT(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldLT(FieldAssetType, v))
}

// AssetTypeLTE applies the LTE predicate on the "asset_type" field.
func AssetTypeLTE(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldLTE(FieldAssetType, v))
}

// AssetTypeContains applies the Contains predicate on the "asset_type" field.
func AssetTypeContains(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldContains(FieldAssetType, v))
}

// AssetTypeHasPrefix applies the HasPrefix predicate on the "asset_type" field.
func AssetTypeHasPrefix(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldHasPrefix(FieldAssetType, v))
}

// AssetTypeHasSuffix applies the HasSuffix predicate on the "asset_type" field.
func AssetTypeHasSuffix(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldHasSuffix(FieldAssetType, v))
}

// AssetTypeEqualFold applies the EqualFold predicate on the "asset_type" field.
func AssetTypeEqualFold(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldEqualFold(FieldAssetType, v))
}

// AssetTypeContainsFold applies the ContainsFold predicate on the "asset_type" field.
func AssetTypeContainsFold(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldContainsFold(FieldAssetType, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldContainsFold(FieldDescription, v))
}

// ValueEQ applies the EQ predicate on the "value" field.
func ValueEQ(v float64) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldEQ(FieldValue, v))
}

// ValueNEQ applies the NEQ predicate on the "value" field.
func ValueNEQ(v float64) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldNEQ(FieldValue, v))
}

// ValueIn applies the In predicate on the "value" field.
func ValueIn(vs ...float64) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldIn(FieldValue, vs...))
}

// ValueNotIn applies the NotIn predicate on the "value" field.
func ValueNotIn(vs ...float64) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldNotIn(FieldValue, vs...))
}

// ValueGT applies the GT predicate on the "value" field.
func ValueGT(v float64) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldGT(FieldValue, v))
}

// ValueGTE applies the GTE predicate on the "value" field.
func ValueGTE(v float64) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldGTE(FieldValue, v))
}

// ValueLT applies the LT predicate on the "value" field.
func ValueLT(v float64) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldLT(FieldValue, v))
}

// ValueLTE applies the LTE predicate on the "value" field.
func ValueLTE(v float64) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldLTE(FieldValue, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.ManualAsset {
	return predicate.ManualAsset(sql.FieldLTE(FieldUpdatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ManualAsset) predicate.ManualAsset {
	return predicate.ManualAsset(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ManualAsset) predicate.ManualAsset {
	return predicate.ManualAsset(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ManualAsset) predicate.ManualAsset {
	return predicate.ManualAsset(func(s *sql.Selector) {
		p(s.Not())
	})
}
